package com.bankapp.transaction.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;

import org.apache.log4j.Logger;

import com.bankapp.account.dao.impl.CustomerDAOImpl;
import com.bankapp.dbutil.PostgresConnection;
import com.bankapp.exception.BankException;
import com.bankapp.exception.LoginException;
import com.bankapp.transaction.dao.TransactionDAO;
import com.bankapp.transaction.model.Transaction;

public class TransactionDAOImpl implements TransactionDAO{
	
	Logger log=Logger.getLogger(TransactionDAOImpl.class);

	@Override
	public int performWithdrawal(Transaction transaction) throws BankException {
		int ar= 0;
		Connection connection = null;
		try {
		    connection = PostgresConnection.getConnection();
			String sql1 = "insert into bank_schema.transaction(accountnumber,type,amount) values(?,?,?)";
			String sql2 = "update account set balance=balance - ? where accountnumber = ?";
			connection.setAutoCommit(false);
			
			PreparedStatement preparedStatement = connection.prepareStatement(sql1);
			preparedStatement.setInt(1, transaction.getAccountnumber());
			preparedStatement.setString(2, "Withdrawal");
			preparedStatement.setInt(3, transaction.getAmount());
			preparedStatement.addBatch();
			
			preparedStatement = connection.prepareStatement(sql2);
			preparedStatement.setInt(1, transaction.getAmount());
			preparedStatement.setInt(2, transaction.getAccountnumber());
			preparedStatement.addBatch();
			
			ar = preparedStatement.executeUpdate();
			connection.commit();
		} catch (ClassNotFoundException | SQLException e) {
			try {
				log.warn(e);
				connection.rollback();
				log.debug("rollback success");
			} catch (SQLException e1) {
				log.debug("unable to rollback");
			}
			throw new BankException("Internal error occured please contact SYSADMIN");
		}//can add new catch to throw new business exception specific to sqlexception
		return ar;
	}
	
	@Override
	public int performDeposit(Transaction transaction) throws BankException {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int performTransfer(Transaction transaction) throws BankException {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public List<Transaction> listTransactionById(int accountid) throws BankException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Transaction> listTransactionByAccNum(int accountNumber) throws BankException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Transaction> listAllTransactions() throws BankException {
		// TODO Auto-generated method stub
		return null;
	}

	
}
